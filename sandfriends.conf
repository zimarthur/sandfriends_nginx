#adiciona arquivos da pasta configs_extra
include /etc/nginx/conf.d/configs_extras/*.conf;

#www.sandfriends.com.br
#Redireciona tudo para o sandfriends.com.br
server {
    server_name www.sandfriends.com.br;
    return 301 $scheme://sandfriends.com.br$request_uri;
}

#quadras.sandfriends.com.br
#Site do gestor - flutter
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name quadras.sandfriends.com.br;

    client_max_body_size 20M;

    add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
    add_header 'Access-Control-Max-Age' '3600'  always;

    ssl_certificate /etc/letsencrypt/live/sandfriends.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sandfriends.com.br/privkey.pem;

    location /img {
		alias /var/www/html/img;
	}

    #Passa requisições pro backend em flask
    location /req/ {
        proxy_pass http://sandfriends_backend:8000/;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass_request_headers on;

        proxy_redirect off;
    }

    location / {
        root /var/www/html/sandfriends_web;
        #alias /var/www/html/sandfriends_web/;
        try_files $uri $uri/ /index.html;
    }
   
}

#app.sandfriends.com.br
#Backend - flask
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name app.sandfriends.com.br;

    client_max_body_size 20M;	

    add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
    add_header 'Access-Control-Max-Age' '3600'  always;

    ssl_certificate /etc/letsencrypt/live/sandfriends.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sandfriends.com.br/privkey.pem;

    location /img {
		alias /var/www/html/img;
	}

    #Passa requisições pro backend em flask
    location / {
        proxy_pass http://sandfriends_backend:8000;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass_request_headers on;

        proxy_redirect off;
    }
   
}

#Domínio principal - sandfriends.com.br
server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name sandfriends.com.br;

    add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
    add_header 'Access-Control-Max-Age' '3600'  always;

    #add_header Access-Control-Allow-Origin quadras.sandfriends.com.br;

    ssl_certificate /etc/letsencrypt/live/sandfriends.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sandfriends.com.br/privkey.pem;

    #Arquivo assetlinks.json - abrir links do sandfriends no celular no aplicativo invés do site
    location /.well-known {
		alias /var/www/html/.well-known/;
	}

    location /img {
		alias /var/www/html/img;
	}

    location / {
    	#Landing page

    }
}

#Caso venha pela porta HTTP, redireciona para HTTPS
server {
    listen 80;
    listen [::]:80;

    server_name *.sandfriends.com.br sandfriends.com.br;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# server {
#     listen 80;
#     listen [::]:80;

#     server_name teste.sandfriends.com.br;
#     server_tokens off;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     location / {
#         return 301 https://teste.sandfriends.com.br$request_uri;
#     }
# }

# server {
#     listen 80 default_server;
#     server_name _;
    
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
    
#     return 301 https://$host$request_uri;
# }


